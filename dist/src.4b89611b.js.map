{"version":3,"sources":["src/Paddle.js","src/input.js","src/CollisionDetection.js","src/Ball.js","src/Brick.js","src/Levels.js","src/Game.js","src/index.js"],"names":["Paddle","game","gameWidth","height","width","maxSpeed","speed","position","x","y","gameHeight","ctx","grd","createLinearGradient","addColorStop","fillStyle","fillRect","deltaTime","InputHandler","paddle","document","addEventListener","event","keyCode","moveLeft","moveRight","togglePause","start","stop","collisionDetect","ball","gameObject","bottomOfBall","size","topOfBall","topOfObject","bottomOfObject","leftOfObject","rightOfObject","Ball","image","querySelector","reset","drawImage","lives","Brick","hit","levelBuilder","level","bricks","forEach","row","rowIndex","brick","brickIndex","push","level1","level2","GAME_STATE","PAUSED","RUNNING","MENU","GAMEOVER","NEWLEVEL","Game","gameState","gameObjects","levels","currentLevel","length","object","update","filter","draw","rect","fill","font","textAlign","fillText","menuGrad","canvas","gameBG","getContext","GAME_WIDTH","GAME_HEIGHT","lastTime","gameLoop","timeStamp","clearRect","requestAnimationFrame"],"mappings":"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","file":"src.4b89611b.js","sourceRoot":"..","sourcesContent":["export default class Paddle {\r\n  constructor(game) {\r\n    this.gameWidth = game.gameWidth;\r\n    this.height = 20;\r\n    this.width = 150;\r\n\r\n    this.maxSpeed = 5;\r\n\r\n    this.speed = 0;\r\n\r\n    this.position = {\r\n      x: game.gameWidth / 2 - this.width / 2,\r\n      y: game.gameHeight - this.height - 10\r\n    };\r\n  }\r\n\r\n  draw(ctx) {\r\n    const grd = ctx.createLinearGradient(0, 550, 800, 600);\r\n    grd.addColorStop(0, \"yellow\");\r\n    grd.addColorStop(1, \"orange\");\r\n    ctx.fillStyle = grd;\r\n    ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n\r\n  moveLeft() {\r\n    this.speed = -this.maxSpeed;\r\n  }\r\n\r\n  moveRight() {\r\n    this.speed = this.maxSpeed;\r\n  }\r\n\r\n  stop() {\r\n    this.speed = 0;\r\n  }\r\n\r\n  update(deltaTime) {\r\n    this.position.x += this.speed;\r\n\r\n    if (this.position.x < 0) {\r\n      this.position.x = 0;\r\n    }\r\n\r\n    if (this.position.x + this.width > this.gameWidth) {\r\n      this.position.x = this.gameWidth - this.width;\r\n    }\r\n  }\r\n}\r\n","export default class InputHandler {\r\n  constructor(paddle, game) {\r\n    document.addEventListener(\"keydown\", event => {\r\n      switch (event.keyCode) {\r\n        case 37:\r\n          paddle.moveLeft();\r\n          break;\r\n        case 39:\r\n          paddle.moveRight();\r\n          break;\r\n        case 27:\r\n          game.togglePause();\r\n          break;\r\n        case 32:\r\n          game.start();\r\n          break;\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"keyup\", event => {\r\n      switch (event.keyCode) {\r\n        case 37:\r\n          paddle.speed < 0 && paddle.stop();\r\n          break;\r\n        case 39:\r\n          paddle.speed > 0 && paddle.stop();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export function collisionDetect(ball, gameObject) {\r\n  //collision check paddle\r\n  const bottomOfBall = ball.position.y + ball.size;\r\n  const topOfBall = ball.position.y;\r\n\r\n  const topOfObject = gameObject.position.y;\r\n  const bottomOfObject = gameObject.position.y + gameObject.height;\r\n\r\n  const leftOfObject = gameObject.position.x;\r\n  const rightOfObject = gameObject.position.x + gameObject.width;\r\n\r\n  if (\r\n    bottomOfBall >= topOfObject &&\r\n    topOfBall <= bottomOfObject &&\r\n    ball.position.x >= leftOfObject &&\r\n    ball.position.x + ball.size <= rightOfObject\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import { collisionDetect } from \"./CollisionDetection\";\r\n\r\nexport default class Ball {\r\n  constructor(game) {\r\n    this.image = document.querySelector(\"#gameBall\");\r\n\r\n    this.gameWidth = game.gameWidth;\r\n\r\n    this.gameHeight = game.gameHeight;\r\n\r\n    this.game = game;\r\n\r\n    this.reset();\r\n\r\n    this.size = 40;\r\n  }\r\n\r\n  reset() {\r\n    this.position = { x: 100, y: 300 };\r\n\r\n    this.speed = { x: 5, y: 5 };\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.drawImage(\r\n      this.image,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.size,\r\n      this.size\r\n    );\r\n  }\r\n\r\n  update(deltaTime) {\r\n    this.position.x += this.speed.x;\r\n    this.position.y += this.speed.y;\r\n\r\n    //collision check left and right boundry\r\n    if (this.position.x + this.size > this.gameWidth || this.position.x < 0) {\r\n      this.speed.x = -this.speed.x;\r\n    }\r\n    //collision check top boundry\r\n    if (this.position.y < 0) {\r\n      this.speed.y = -this.speed.y;\r\n    }\r\n\r\n    //check for bottom and deduct life\r\n    if (this.position.y + this.size > this.gameHeight) {\r\n      this.game.lives--;\r\n      (this.game.paddle.position.x =\r\n        this.game.gameWidth / 2 - this.game.paddle.width / 2),\r\n        this.reset();\r\n    }\r\n\r\n    //collision check paddle\r\n    const leftPaddle = this.game.paddle.position.x;\r\n    const rightPaddle = this.game.paddle.position.x + this.game.paddle.width;\r\n\r\n    if (collisionDetect(this, this.game.paddle)) {\r\n      this.speed.y = -this.speed.y;\r\n      this.position.y = this.game.paddle.position.y - this.size;\r\n    }\r\n  }\r\n}\r\n","import { collisionDetect } from \"./CollisionDetection\";\r\n\r\nexport default class Brick {\r\n  constructor(game, position) {\r\n    this.image = document.querySelector(\"#gameBrick\");\r\n\r\n    this.game = game;\r\n\r\n    this.position = position;\r\n\r\n    this.width = 70;\r\n\r\n    this.height = 65;\r\n\r\n    this.hit = false;\r\n  }\r\n\r\n  update() {\r\n    if (collisionDetect(this.game.ball, this)) {\r\n      this.game.ball.speed.y = -this.game.ball.speed.y;\r\n\r\n      this.hit = true;\r\n    }\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.drawImage(\r\n      this.image,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n}\r\n","import Brick from \"./Brick\";\r\n\r\nexport function levelBuilder(game, level) {\r\n  let bricks = [];\r\n\r\n  level.forEach((row, rowIndex) => {\r\n    row.forEach((brick, brickIndex) => {\r\n      if (brick === 1) {\r\n        let position = {\r\n          x: 50 + 70 * brickIndex,\r\n          y: 65 * rowIndex + 10\r\n        };\r\n        bricks.push(new Brick(game, position));\r\n      }\r\n    });\r\n  });\r\n\r\n  return bricks;\r\n}\r\n\r\nexport const level1 = [\r\n  [0, 0, 1, 1, 0, 0, 1, 1, 0, 0],\r\n  [0, 0, 1, 1, 1, 1, 1, 1, 0, 0],\r\n  [1, 1, 1, 0, 0, 0, 0, 1, 1, 1],\r\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n];\r\n\r\nexport const level2 = [\r\n  [1, 0, 1, 1, 0, 0, 1, 1, 0, 1],\r\n  [0, 0, 1, 0, 1, 1, 0, 1, 0, 0],\r\n  [1, 1, 0, 0, 1, 0, 0, 1, 1, 1],\r\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n];\r\n","import Paddle from \"./Paddle\";\r\nimport InputHandler from \"./input\";\r\nimport Ball from \"./Ball\";\r\nimport { level1, level2, levelBuilder } from \"./Levels\";\r\n\r\nconst GAME_STATE = {\r\n  PAUSED: 0,\r\n  RUNNING: 1,\r\n  MENU: 2,\r\n  GAMEOVER: 3,\r\n  NEWLEVEL: 4\r\n};\r\n\r\nexport default class Game {\r\n  constructor(gameWidth, gameHeight) {\r\n    this.gameWidth = gameWidth;\r\n    this.gameHeight = gameHeight;\r\n    this.gameState = GAME_STATE.MENU;\r\n    this.paddle = new Paddle(this);\r\n    this.ball = new Ball(this);\r\n    new InputHandler(this.paddle, this);\r\n    this.gameObjects = [];\r\n    this.lives = 3;\r\n    this.bricks = [];\r\n    this.levels = [level1, level2];\r\n    this.currentLevel = 0;\r\n  }\r\n\r\n  start() {\r\n    if (\r\n      this.gameState !== GAME_STATE.MENU &&\r\n      this.gameState !== GAME_STATE.NEWLEVEL\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.bricks = levelBuilder(this, this.levels[this.currentLevel]);\r\n\r\n    this.ball.reset();\r\n\r\n    this.gameObjects = [this.ball, this.paddle];\r\n\r\n    this.gameState = GAME_STATE.RUNNING;\r\n  }\r\n\r\n  update(deltaTime) {\r\n    if (this.lives === 0) {\r\n      this.gameState = GAME_STATE.GAMEOVER;\r\n    }\r\n\r\n    if (\r\n      this.gameState === GAME_STATE.PAUSED ||\r\n      this.gameState === GAME_STATE.MENU ||\r\n      this.gameState === GAME_STATE.GAMEOVER\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (this.bricks.length === 0) {\r\n      this.currentLevel++;\r\n      this.gameState = GAME_STATE.NEWLEVEL;\r\n      this.start();\r\n    }\r\n\r\n    [...this.gameObjects, ...this.bricks].forEach(object =>\r\n      object.update(deltaTime)\r\n    );\r\n\r\n    this.bricks = this.bricks.filter(brick => !brick.hit);\r\n  }\r\n\r\n  draw(ctx) {\r\n    [...this.gameObjects, ...this.bricks].forEach(object => object.draw(ctx));\r\n\r\n    if (this.gameState === GAME_STATE.PAUSED) {\r\n      ctx.rect(0, 0, this.gameWidth, this.gameHeight);\r\n      ctx.fillStyle = \"rgba(50,50,250,0.5)\";\r\n      ctx.fill();\r\n      ctx.font = \"50px sans-serif\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillText(\"Paused\", this.gameWidth / 2, this.gameHeight / 2);\r\n    }\r\n\r\n    if (this.gameState === GAME_STATE.MENU) {\r\n      ctx.rect(0, 0, this.gameWidth, this.gameHeight);\r\n      let menuGrad = ctx.createLinearGradient(\r\n        0,\r\n        0,\r\n        this.gameWidth,\r\n        this.gameHeight\r\n      );\r\n      menuGrad.addColorStop(0, \"rgb(0,150,250)\");\r\n      menuGrad.addColorStop(1, \"rgb(100,255,100)\");\r\n      ctx.fillStyle = menuGrad;\r\n      ctx.fill();\r\n      ctx.font = \"50px sans-serif\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillText(\r\n        \"Press SPACEBAR to Start Game\",\r\n        this.gameWidth / 2,\r\n        this.gameHeight / 2\r\n      );\r\n      ctx.fillText(\r\n        \"Press ESC to Pause \",\r\n        this.gameWidth / 2,\r\n        this.gameHeight / 2 + 60\r\n      );\r\n    }\r\n\r\n    if (this.gameState === GAME_STATE.GAMEOVER) {\r\n      ctx.rect(0, 0, this.gameWidth, this.gameHeight);\r\n      ctx.fillStyle = \"rgba(50,50,250,0.8)\";\r\n      ctx.fill();\r\n      ctx.font = \"50px sans-serif\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fillText(\"GAME OVER FOOL\", this.gameWidth / 2, this.gameHeight / 2);\r\n    }\r\n  }\r\n\r\n  togglePause() {\r\n    if (this.gameState === GAME_STATE.PAUSED) {\r\n      this.gameState = GAME_STATE.RUNNING;\r\n    } else {\r\n      this.gameState = GAME_STATE.PAUSED;\r\n    }\r\n  }\r\n\r\n  // toggleMenu() {\r\n  //   if (this.gameState === GAME_STATE.MENU) {\r\n  //     this.gameState = GAME_STATE.RUNNING;\r\n  //   } else {\r\n  //  }\r\n  // }\r\n}\r\n","import Game from \"./Game\";\r\n\r\nlet canvas = document.querySelector(\"#gameScreen\");\r\nlet gameBG = document.querySelector(\"#gameBackground\");\r\n\r\nlet ctx = canvas.getContext(\"2d\");\r\n\r\nconst GAME_WIDTH = 800;\r\n\r\nconst GAME_HEIGHT = 600;\r\n\r\nlet game = new Game(GAME_WIDTH, GAME_HEIGHT);\r\n\r\nlet lastTime = 0;\r\n\r\nfunction gameLoop(timeStamp) {\r\n  let deltaTime = timeStamp - lastTime;\r\n  lastTime = timeStamp;\r\n  //clear the canvas screen\r\n  ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\r\n\r\n  ctx.drawImage(gameBG, 100, 20);\r\n  game.update(deltaTime);\r\n\r\n  game.draw(ctx);\r\n\r\n  requestAnimationFrame(gameLoop);\r\n}\r\n\r\nrequestAnimationFrame(gameLoop);\r\n"]}